*********************Backend******************

//////////////////////DONE/////////////////////
# scheduler for changing the status from scheduled to active
# scheduler for changing the status from active to expired
# add redeeming org as array
# calcouponamount api
# redemption api
# cps api mock
# rename get to query for the api's
# add share rate as array [organization wise, overall campaign wise => If no organization wise share rate found then campaign wise share rate will be considered]
# Query valid coupon list for a coupon holder with/without min order value check
# Create API for pre-transaction calculation of selected coupon in Payment Module system
# need to include the condition where if no contributors are provided then all organization will have the overall share rate config
# bulk coupon code generator
# add x days of validity after coupon activation feature

////////////////////IN PROGRESS///////////////////

# bulk scheduled coupon creation api 
    --> installed npm xlsx package for reading and writing form xlsx files [Done]
    --> upload holderID in bulk from gsheet [Done]
    --> upload shareRate in bulk from gsheet [Done]
    --> execute batch coupon issue task for a specific task [Done]
  
    --> upload holderID & shareRate in bulk from xlsx
    --> manage input validation by pushing error message data in ghseet and xlsx 
    --> initiate a scheduler to call issueCoupon API and issue coupon on scheduled time&date
    --> handle automatic/manual code generation system

////////////////////PENDING///////////////////

# notification module
# introduce bull queue management
# user and role management
# Error handling
# Coupon Code generator
# Report generating api
# retry coupon issue for failed coupon issue
# retry coupon redeem for failed coupon redeem
# centralized activity log
# user creation API
# user login API
# access contoll for users
# mindsdb exploration for db Machine Learning (AI)
# need to check for coupon applicability before locking redemption 
# mongo to mysql shift



**************Frontend - Coupon admin portal*************

//////////////////////DONE////////////////////

# find and initiate the frontend admin theme

/////////////////////PENDING//////////////////
# Login
# Registration
# Coupon creation
# Bulk scheduled/instant coupon creation
# Coupon status management
# Reports
# Dashboards
# Middleware Performance
# Flag management
# Comments and remarks
# History of coupon activity
# Coupon details page



>>>>>>>>>>>>>> mysql db models <<<<<<<<<<<<<<<<<<<

CREATE TABLE coupons(
    id                          int AUTO_INCREMENT,
    code                        VARCHAR(255),
    holder_type                 VARCHAR(255),
    holder_id                   VARCHAR(255),
    discount_type               VARCHAR(255),
    discount_amount             INT,
    discount_order_component    VARCHAR(255),
    max_discount_amount         INT,
    min_trnx_amount             INT,
    validity_start_from         DATETIME,
    validity_end_on             DATETIME,
    status                      VARCHAR(255),
    created_at                  DATETIME,
    PRIMARY KEY (id)
)

CREATE TABLE coupon_redeem_services (
    id                  INT AUTO_INCREMENT,
    service_name        VARCHAR(255),
    service_id          VARCHAR(255),
    coupon_id           INT,
    created_at          DATETIME,
    updated_at          DATETIME,
    PRIMARY KEY (id),
    FOREIGN KEY (coupon_id) REFERENCES coupons(id)
)

CREATE Table coupon_providers (
    id              int AUTO_INCREMENT,
    coupon_id       int,
    provider_type   VARCHAR(255),
    provider_id     VARCHAR(255),
    created_at      DATETIME,
    updated_at      DATETIME,
    PRIMARY KEY (id),
    Foreign Key (coupon_id) REFERENCES coupons(id)
)

CREATE Table coupon_holders (
    id              INT AUTO_INCREMENT,
    holder_type     VARCHAR(255),
    holder_id       VARCHAR(255),
    coupon_id       INT,
    created_at      DATETIME,
    updated_at      DATETIME,
    PRIMARY KEY (id),
    Foreign Key (coupon_id) REFERENCES coupons(id)
)

create table coupon_status_change_log (
    id              int AUTO_INCREMENT,
    coupon_id       int,
    from_status     VARCHAR(255),
    to_status       VARCHAR(255),
    created_at      DATETIME,
    updated_at      DATETIME,
    PRIMARY KEY (id),
    Foreign Key (coupon_id) REFERENCES coupons(id)
)